name: Test, Build, Publish

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: python-grpc
  GCP_SERVICE: sample
  GCP_PROJECT: github-276707
  GCP_REGION: us-central1

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Test Docker Build
        run: |
          docker build . --file Dockerfile

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # Tag and push for Github Packages
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          echo Tagged $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo Pushed $IMAGE_ID:$VERSION
          
          # Tag and push for GCP
          docker tag $IMAGE_NAME us.gcr.io/$GCP_PROJECT/$IMAGE_NAME:latest

      - name: Deploy service to Cloud Run
        uses: stefda/action-cloud-run@v1.0
        with:
          image: us.gcr.io/${{env.GCP_PROJECT}}/${{env.IMAGE_NAME}}:latest
          service: ${{ env.GCP_SERVICE }}
          project: ${{ env.GCP_PROJECT }}
          region: ${{ env.GCP_REGION }}
          service key: ${{ secrets.GCLOUD_AUTH }}
